# -*- coding: utf-8 -*-
"""Tugas 1 Decision Tree Rully Lukas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wwY7bzjD61c2O3Ake7jiyeXzdOp3Lcw2

Nama:

NIM:

Dataset:melb_house.csv

Overview:
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor
from sklearn.metrics import mean_absolute_error
from sklearn.preprocessing import LabelEncoder

# Mengunduh data dari Google Drive
url = '/content/melb_data.csv'
data = pd.read_csv(url)

# Menampilkan 5 baris pertama dari dataset
print(data.head())

# Membuang baris dengan nilai yang hilang (missing values)
data.dropna(inplace=True)

# Memisahkan fitur dan label
X = data.drop('Price', axis=1)  # Fitur
y = data['Price']  # Label

# Melakukan Label Encoding pada kolom kategorikal jika diperlukan
label_encoder = LabelEncoder()
categorical_cols = X.select_dtypes(include=['object']).columns.tolist()
for col in categorical_cols:
    X[col] = label_encoder.fit_transform(X[col])

# Memisahkan data menjadi data latih dan data uji
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Membuat model Decision Tree Regressor
model = DecisionTreeRegressor()

# Melatih model
model.fit(X_train, y_train)

# Memprediksi harga untuk data uji
y_pred = model.predict(X_test)

# Menghitung Mean Absolute Error (MAE)
mae = mean_absolute_error(y_test, y_pred)
print("Akurasi Decision Tree:", mae)